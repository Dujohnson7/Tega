{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Chart from\"chart.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CardBarChart(){const[chartData,setChartData]=useState(null);useEffect(()=>{const fetchWeeklyTickets=async()=>{try{const now=new Date();const startOfWeek=new Date(now);startOfWeek.setDate(now.getDate()-now.getDay()+(now.getDay()===0?-6:1));startOfWeek.setHours(0,0,0,0);const endOfWeek=new Date(startOfWeek);endOfWeek.setDate(startOfWeek.getDate()+6);endOfWeek.setHours(23,59,59,999);const token=localStorage.getItem(\"token\");const response=await fetch(\"http://localhost:5000/api/reports/date-range?start=\".concat(startOfWeek.getTime(),\"&end=\").concat(endOfWeek.getTime()),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},credentials:\"include\"});if(!response.ok){const errorText=await response.text();console.error(\"Failed to fetch tickets:\",response.status,errorText);return;}const tickets=await response.json();console.log(\"Fetched tickets for bar chart:\",tickets);const labels=[\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"];const paid=Array(7).fill(0);const unpaid=Array(7).fill(0);tickets.forEach(ticket=>{const ticketDate=new Date(ticket.date);const day=ticketDate.getDay();const index=day===0?6:day-1;if(ticket.payState===\"PAID\"||ticket.payState===\"paid\"){paid[index]+=1;}else{unpaid[index]+=1;}});console.log(\"Paid tickets per day:\",paid);console.log(\"Unpaid tickets per day:\",unpaid);setChartData({labels,datasets:[{label:\"Paid Tickets\",backgroundColor:\"rgba(34,197,94,0.8)\",data:paid,barThickness:8},{label:\"Unpaid Tickets\",backgroundColor:\"rgba(239,68,68,0.8)\",data:unpaid,barThickness:8}]});}catch(err){console.error(\"Error fetching tickets:\",err);}};fetchWeeklyTickets();},[]);useEffect(()=>{if(!chartData)return;const ctx=document.getElementById(\"bar-chart\").getContext(\"2d\");if(window.myBar)window.myBar.destroy();window.myBar=new Chart(ctx,{type:\"bar\",data:chartData,options:{maintainAspectRatio:false,responsive:true,legend:{position:\"bottom\",labels:{fontColor:\"#4B5563\"}},scales:{xAxes:[{ticks:{autoSkip:false,fontColor:\"#4B5563\"},gridLines:{display:false}}],yAxes:[{ticks:{beginAtZero:true,precision:0,fontColor:\"#4B5563\"},gridLines:{color:\"rgba(0,0,0,0.1)\"}}]}}});return()=>window.myBar&&window.myBar.destroy();},[chartData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"rounded-t px-4 py-3 bg-transparent\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-blueGray-700 text-xl font-semibold\",children:\"Ticket Sales\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 flex-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"relative h-350-px\",children:/*#__PURE__*/_jsx(\"canvas\",{id:\"bar-chart\"})})})]});}","map":{"version":3,"names":["React","useEffect","useState","Chart","jsx","_jsx","jsxs","_jsxs","CardBarChart","chartData","setChartData","fetchWeeklyTickets","now","Date","startOfWeek","setDate","getDate","getDay","setHours","endOfWeek","token","localStorage","getItem","response","fetch","concat","getTime","method","headers","Authorization","credentials","ok","errorText","text","console","error","status","tickets","json","log","labels","paid","Array","fill","unpaid","forEach","ticket","ticketDate","date","day","index","payState","datasets","label","backgroundColor","data","barThickness","err","ctx","document","getElementById","getContext","window","myBar","destroy","type","options","maintainAspectRatio","responsive","legend","position","fontColor","scales","xAxes","ticks","autoSkip","gridLines","display","yAxes","beginAtZero","precision","color","className","children","id"],"sources":["D:/AUCA/AUCA INNOVATION CENTER/WebTech/Final/TegaBus/frontend/tegaPortal/src/components/Cards/CardBarChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js\";\n\nexport default function CardBarChart() {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchWeeklyTickets = async () => {\n      try {\n        const now = new Date();\n        const startOfWeek = new Date(now);\n        startOfWeek.setDate(now.getDate() - now.getDay() + (now.getDay() === 0 ? -6 : 1));\n        startOfWeek.setHours(0, 0, 0, 0);\n        \n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 6);\n        endOfWeek.setHours(23, 59, 59, 999);\n\n        const token = localStorage.getItem(\"token\");\n\n        const response = await fetch(\n          `http://localhost:5000/api/reports/date-range?start=${startOfWeek.getTime()}&end=${endOfWeek.getTime()}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            credentials: \"include\",\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error(\"Failed to fetch tickets:\", response.status, errorText);\n          return;\n        }\n\n        const tickets = await response.json();\n        console.log(\"Fetched tickets for bar chart:\", tickets);  \n\n        const labels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n        const paid = Array(7).fill(0);\n        const unpaid = Array(7).fill(0);\n\n        tickets.forEach(ticket => {\n          const ticketDate = new Date(ticket.date);\n          const day = ticketDate.getDay();\n          const index = day === 0 ? 6 : day - 1;\n           \n          if (ticket.payState === \"PAID\" || ticket.payState === \"paid\") {\n            paid[index] += 1;\n          } else {\n            unpaid[index] += 1;\n          }\n        });\n\n        console.log(\"Paid tickets per day:\", paid);  \n        console.log(\"Unpaid tickets per day:\", unpaid); \n\n        setChartData({\n          labels,\n          datasets: [\n            {\n              label: \"Paid Tickets\",\n              backgroundColor: \"rgba(34,197,94,0.8)\",\n              data: paid,\n              barThickness: 8,\n            },\n            {\n              label: \"Unpaid Tickets\",\n              backgroundColor: \"rgba(239,68,68,0.8)\",\n              data: unpaid,\n              barThickness: 8,\n            },\n          ],\n        });\n      } catch (err) {\n        console.error(\"Error fetching tickets:\", err);\n      }\n    };\n\n    fetchWeeklyTickets();\n  }, []);\n\n  useEffect(() => {\n    if (!chartData) return;\n\n    const ctx = document.getElementById(\"bar-chart\").getContext(\"2d\");\n    if (window.myBar) window.myBar.destroy();\n\n    window.myBar = new Chart(ctx, {\n      type: \"bar\",\n      data: chartData,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        legend: { \n          position: \"bottom\",\n          labels: {\n            fontColor: \"#4B5563\"  \n          }\n        },\n        scales: {\n          xAxes: [{ \n            ticks: { \n              autoSkip: false,\n              fontColor: \"#4B5563\"\n            },\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{ \n            ticks: { \n              beginAtZero: true, \n              precision: 0,\n              fontColor: \"#4B5563\"\n            },\n            gridLines: {\n              color: \"rgba(0,0,0,0.1)\"\n            }\n          }],\n        },\n      },\n    });\n\n    return () => window.myBar && window.myBar.destroy();\n  }, [chartData]);\n\n  return (\n    <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\n      <div className=\"rounded-t px-4 py-3 bg-transparent\">\n        <h2 className=\"text-blueGray-700 text-xl font-semibold\">Ticket Sales</h2>\n      </div>\n      <div className=\"p-4 flex-auto\">\n        <div className=\"relative h-350-px\">\n          <canvas id=\"bar-chart\"></canvas>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}